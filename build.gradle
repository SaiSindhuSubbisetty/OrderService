plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.protobuf' version '0.9.2'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

ext {
    set('springCloudVersion', "2022.0.4") // Make sure this matches your version
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/release" }
}

sourceCompatibility = '20'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'org.postgresql:postgresql'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'com.h2database:h2'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.0.5'// For Eureka Server
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    testImplementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.0.0'
    implementation 'io.grpc:grpc-netty-shaded:1.56.0' // gRPC server dependency
    implementation 'io.grpc:grpc-protobuf:1.56.0' // gRPC protobuf integration
    implementation 'io.grpc:grpc-stub:1.56.0' // gRPC stubs for client
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'net.devh:grpc-spring-boot-starter:2.13.0.RELEASE'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.6"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.23.0" // Protobuf compiler
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.56.0" // gRPC Java code generator
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
            task.plugins {
                grpc {
                    option 'lite'
                }
            }
        }
    }
}

// Configure source sets to have everything in 'src/main/proto'
sourceSets {
    main {
        java {
            srcDirs 'src/main/proto' // Place generated Java and gRPC files here
        }
        proto {
            srcDir 'src/main/proto' // Your .proto files will be here
        }
    }
}

tasks.processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}